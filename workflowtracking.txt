DIRECTORY OF WHERE THINGS ARE:

 the MOST important scripts are as follow:
 --scripts/player/held_weapon_behavior: acts as a data instance for the held weapon
 -- scripts/player/invenManager (NOT inveNtorymanager): Tracking ammunition and communicating 
	with the player/held item
 --scripts/player/playermovementinput: Kinematic controller for the player, input/output

Other places are as follow:
 resources/weaponresources contains all the templates for implemented weapons
 Models/glbs and textures for the raws of all imported models
 Scenes/player associated/player for the actual player scene
 Scenes/environ for the test environment I have the player in

--KNOWN PROBLEMS:
--Cant switch to firearm if starting from melee
-- players can't "step" up a ledge, no matter how small
-- weapons jitter while player is holding movement keys on floor (caused by move and slide, presumably)



CURRENT DEV CYCLE:
Neural network class

NEEDS DOING:
KEY:
	+: Easy
	-: Hard
	*: Important (to current course of dev plans)
	&: Unimportant


FUNCTIONAL:
	
FRAMERATE COUNTER!!!!!!!!!!!!!!!!!!!!!
	
	
Change to scoring/ partial randomization mutations 
(dont update unless beats score, only some nodes mtuate)
expansion on this: have a "highscore" sylph and 2 "current" sylph that each loads and mutates from
Highscore only updates if a sylph beats said score
current updates from whichever of the "current" sylphs does best
Only one "current" sylph will mutate, with the other remaining the same. (old vs new vs legacy)
ALSO ALSO ALSO: session highscore vs all time highscore.


Partial randomization:
In each mutation cycle, rather than mutating EVERY node, have a random chance to mutate each node.

Partial firing:
Get rid of activation function because it's lame
Actually don't get rid of it but instead rewrite it:
Rather than ALWAYS firing, nodes will sometimes fire based off their value.
For example, a node with 0 will only fire, idunno, 2% of the time, and a node with 1 will fire 98
First layer nodes shouldn't do this.
Seperate firestrength and firerate variables?????? (yess maybe?)

Add and test expansion code
Compartmentalize test code
Make testing local to Sylph
Change ALL ui stuff in heldweapon to be from a single function, not spread out
Reorder sylph txts and add info about 'em
Archon intro ditty


Write add_node_to_layer function
Reimport sylph head but make sure it's actually centered this time, doofus.
Change bullets to have damage falloff ++++&&
Clean up infopanel code, move weapon stat tracking to invenmanager's job
crosshair changes with speed **

Step up/down movement code ----- * (will have to do it at some point)

EXPERIENTIAL:
Scaling gunshot with ammo left
"button-like dialogue trees"
Scrolling chat
get better pistol gunshot &++
footstep sounds +++
context-sensitive leaning --&
ADS makes the camera zoom in & ??
fix weapon clipping ++++++++ &
KICKING!!!
